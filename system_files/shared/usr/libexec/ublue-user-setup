#!/usr/bin/bash

# SCRIPT VERSION
USER_SETUP_VER=13
USER_SETUP_VER_FILE="${XDG_DATA_HOME:-$HOME/.local/share}/ublue/user-setup"
USER_SETUP_VER_RAN=$(cat "$USER_SETUP_VER_FILE")
VEN_ID="$(cat /sys/devices/virtual/dmi/id/chassis_vendor)"

mkdir -p "$(dirname "$USER_SETUP_VER_FILE")" || exit 1

dirname "$USER_SETUP_VER_FILE"

# INIT
UBLUE_CONFIG_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/ublue"
mkdir -p "$UBLUE_CONFIG_DIR"

# Upgrade from v1 to v2 changes only the location of the USER_SETUP_VER.
# Exit if v1 file is present.
USER_SETUP_VER_FILE_V1="$HOME/.ublue-configured"
if [[ -f $USER_SETUP_VER_FILE_V1 ]]; then
  echo "User setup v1 has already run. Exiting..."
  rm "$USER_SETUP_VER_FILE_V1"
  echo "$USER_SETUP_VER" >"$USER_SETUP_VER_FILE"
  exit 0
fi

# Run script if updated
if [[ -f "$USER_SETUP_VER_FILE" && "$USER_SETUP_VER" = "$USER_SETUP_VER_RAN" ]]; then
  echo "User setup v$VER has already run. Exiting..."
  exit 0
fi

# Currently unused
# IMAGE_INFO="/usr/share/ublue-os/image-info.json"
# IMAGE_NAME=$(jq -r '."image-name"' < $IMAGE_INFO)

# Ensure custom ptyxis theme is present
PTYXIS_THEME_DIR="/etc/skel/.local/share/org.gnome.Ptyxis/palettes"
PTYXIS_DIR="$HOME/.local/share/org.gnome.Ptyxis/palettes"
mkdir -p "$PTYXIS_DIR"
if [[ ! -f "$PTYXIS_DIR/catppuccin-dynamic.palette" ]]; then
  cp "$PTYXIS_THEME_DIR/catppuccin-dynamic.palette" "$PTYXIS_DIR/catppuccin-dynamic.palette"
fi

VEN_ID="$(cat /sys/devices/virtual/dmi/id/chassis_vendor)"
if [[ ":Framework:" =~ ":$VEN_ID:" ]]; then
  FRAMEWORK_SETUP_VER=2
  FRAMEWORK_VER_FILE="$UBLUE_CONFIG_DIR/framework-initialized"
  FRAMEWORK_VER_RAN=$(cat "$FRAMEWORK_VER_FILE" 2>/dev/null || echo "0")

  if [[ "$FRAMEWORK_SETUP_VER" -gt "$FRAMEWORK_VER_RAN" ]]; then
    echo "Running Framework setup v$FRAMEWORK_SETUP_VER (previous: v$FRAMEWORK_VER_RAN)"

    CONFIG="$HOME/.config/plasma-org.kde.plasma.desktop-appletsrc"

    if [[ -f "$CONFIG" ]]; then
      # Find kickoff/application launcher applet sections
      APPLET_SECTIONS=$(grep -n '\[Containments\]\[[0-9]*\]\[Applets\]\[[0-9]*\]' "$CONFIG")

      # For each applet section, check if it's a launcher and update it
      while IFS=: read -r line_num line_content; do
        SECTION_NUM=$(echo "$line_content" | sed -E 's/\[Containments\]\[([0-9]+)\]\[Applets\]\[([0-9]+)\]/\1:\2/')
        CONT_NUM=$(echo "$SECTION_NUM" | cut -d: -f1)
        APP_NUM=$(echo "$SECTION_NUM" | cut -d: -f2)

        # Check if this is a launcher applet
        IS_LAUNCHER=$(grep -A 5 "\[Containments\]\[$CONT_NUM\]\[Applets\]\[$APP_NUM\]" "$CONFIG" | grep -i "kickoff\|launcher")

        if [[ -n "$IS_LAUNCHER" ]]; then
          echo "Found launcher applet in section $CONT_NUM:$APP_NUM, updating icon"
          kwriteconfig6 --file "$CONFIG" --group Containments --group $CONT_NUM --group Applets --group $APP_NUM --group Configuration --group General --key "icon" "framework"
        fi
      done <<<"$APPLET_SECTIONS"

      echo "Restarting Plasma to apply changes"
      systemctl --user restart plasma-plasmashell.service
    fi

    echo "$FRAMEWORK_SETUP_VER" >"$FRAMEWORK_VER_FILE"
  else
    echo "Framework setup v$FRAMEWORK_VER_RAN already applied, skipping"
  fi
fi

# More consistent Qt/GTK themes for Flatpaks
flatpak override --user --filesystem=xdg-config/gtk-4.0:ro

# TODO: re-evaluate with Fedora 42
# Setting this variable to anything other than `xdgdesktopportal`
# will break the XDG Desktop Portal inside the sandbox
# See https://github.com/ublue-os/aurora/issues/224
flatpak override --user --unset-env=QT_QPA_PLATFORMTHEME

# webkit override to devpod for nvidia users
flatpak override --user --env=WEBKIT_DISABLE_COMPOSITING_MODE=1 sh.loft.devpod

# Handle privileged tasks
pkexec /usr/libexec/ublue-privileged-user-setup

# Prevent future executions
echo "Writing state file"
echo $USER_SETUP_VER >"$USER_SETUP_VER_FILE"
